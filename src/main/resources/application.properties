spring.application.name=tablese-core

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/table_se_dev
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Set the default logging level for our entire application to DEBUG
logging.level.in.tablese=DEBUG

# Keep the Spring Framework's logging at the INFO level to reduce noise
logging.level.org.springframework=INFO

# ===================================================================
# JWT SECURITY CONFIGURATION
# ===================================================================

# A secret key for signing JWTs. This MUST be a long, random, Base64 encoded string.
# For development, you can generate one from a site like "https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx" (use 256-bit).
# IMPORTANT: In production, this should be an environment variable, not hardcoded.
application.security.jwt.secret-key=MhyoPaZhAJ2sFP5MtfWkfbP6RNrTafYhfJY2k9x2Q2bHgNgSe6ZQGBU8MBZSfYmtnQoAms7jmoSSjTKAzEmHo8nRR7gkjwjWQwcxSfY2W5NfawreYCyMhkS8aoPfB94GCc4cUgABz6CQqwbbp82EA6ESCBwKHfkqn7quARe2JJhcL3XhLSf8QGrQQohXfCFHf5L8KbdjmBUXDjpDzAywgWSCFUnt55qtnDYaXJMRkCrAUtCTC8BGAXoJ4psRe4fB

# Token expiration time in milliseconds. 86400000ms = 24 hours.
application.security.jwt.expiration=86400000

application.cors.allowed-origins=http://localhost:5173